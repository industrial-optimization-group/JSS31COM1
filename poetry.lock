[[package]]
name = "alabaster"
version = "0.7.12"
description = "A configurable sidebar-enabled Sphinx theme"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "anyio"
version = "3.6.1"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "main"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
idna = ">=2.8"
sniffio = ">=1.1"

[package.extras]
trio = ["trio (>=0.16)"]
test = ["uvloop (>=0.15)", "mock (>=4)", "uvloop (<0.15)", "contextlib2", "trustme", "pytest-mock (>=3.6.1)", "pytest (>=7.0)", "hypothesis (>=4.0)", "coverage[toml] (>=4.5)"]
doc = ["sphinx-autodoc-typehints (>=1.2.0)", "sphinx-rtd-theme", "packaging"]

[[package]]
name = "appnope"
version = "0.1.3"
description = "Disable App Nap on macOS >= 10.9"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "argon2-cffi"
version = "21.3.0"
description = "The secure Argon2 password hashing algorithm."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
argon2-cffi-bindings = "*"

[package.extras]
tests = ["pytest", "hypothesis", "coverage[toml] (>=5.0.2)"]
docs = ["furo", "sphinx-notfound-page", "sphinx"]
dev = ["furo", "sphinx-notfound-page", "sphinx", "pytest", "hypothesis", "coverage[toml] (>=5.0.2)", "tomli", "cogapp", "pre-commit"]

[[package]]
name = "argon2-cffi-bindings"
version = "21.2.0"
description = "Low-level CFFI bindings for Argon2"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = ">=1.0.1"

[package.extras]
dev = ["pytest", "cogapp", "pre-commit", "wheel"]
tests = ["pytest"]

[[package]]
name = "astroid"
version = "2.12.2"
description = "An abstract syntax tree for Python with inference support."
category = "main"
optional = false
python-versions = ">=3.7.2"

[package.dependencies]
lazy-object-proxy = ">=1.4.0"
typing-extensions = {version = ">=3.10", markers = "python_version < \"3.10\""}
wrapt = ">=1.11,<2"

[[package]]
name = "asttokens"
version = "2.0.7"
description = "Annotate AST trees with source code positions"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
six = "*"

[package.extras]
test = ["pytest", "astroid (<=2.5.3)"]

[[package]]
name = "atomicwrites"
version = "1.4.1"
description = "Atomic file writes."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "attrs"
version = "22.1.0"
description = "Classes Without Boilerplate"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
tests_no_zope = ["cloudpickle", "pytest-mypy-plugins", "mypy (>=0.900,!=0.940)", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]
tests = ["cloudpickle", "zope.interface", "pytest-mypy-plugins", "mypy (>=0.900,!=0.940)", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]
docs = ["sphinx-notfound-page", "zope.interface", "sphinx", "furo"]
dev = ["cloudpickle", "pre-commit", "sphinx-notfound-page", "sphinx", "furo", "zope.interface", "pytest-mypy-plugins", "mypy (>=0.900,!=0.940)", "pytest (>=4.3.0)", "pympler", "hypothesis", "coverage[toml] (>=5.0.2)"]

[[package]]
name = "babel"
version = "2.10.3"
description = "Internationalization utilities"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pytz = ">=2015.7"

[[package]]
name = "backcall"
version = "0.2.0"
description = "Specifications for callback functions passed in to an API"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "beautifulsoup4"
version = "4.11.1"
description = "Screen-scraping library"
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.dependencies]
soupsieve = ">1.2"

[package.extras]
lxml = ["lxml"]
html5lib = ["html5lib"]

[[package]]
name = "bleach"
version = "5.0.1"
description = "An easy safelist-based HTML-sanitizing tool."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
six = ">=1.9.0"
webencodings = "*"

[package.extras]
dev = ["mypy (==0.961)", "black (==22.3.0)", "wheel (==0.37.1)", "twine (==4.0.1)", "tox (==3.25.0)", "Sphinx (==4.3.2)", "pytest (==7.1.2)", "pip-tools (==6.6.2)", "hashin (==0.17.0)", "flake8 (==4.0.1)", "build (==0.8.0)"]
css = ["tinycss2 (>=1.1.0,<1.2)"]

[[package]]
name = "certifi"
version = "2022.6.15"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cffi"
version = "1.15.1"
description = "Foreign Function Interface for Python calling C code."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
pycparser = "*"

[[package]]
name = "charset-normalizer"
version = "2.1.0"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.6.0"

[package.extras]
unicode_backport = ["unicodedata2"]

[[package]]
name = "colorama"
version = "0.4.5"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "cycler"
version = "0.11.0"
description = "Composable style cycles"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "cython"
version = "0.29.32"
description = "The Cython compiler for writing C extensions for the Python language."
category = "main"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "debugpy"
version = "1.6.2"
description = "An implementation of the Debug Adapter Protocol for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "decorator"
version = "5.1.1"
description = "Decorators for Humans"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "defusedxml"
version = "0.7.1"
description = "XML bomb protection for Python stdlib modules"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "descartes"
version = "1.1.0"
description = "Use geometric objects as matplotlib paths and patches"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
matplotlib = "*"

[[package]]
name = "desdeo"
version = "1.1.3"
description = "Open source framework for interactive multiobjective optimization."
category = "main"
optional = false
python-versions = ">=3.7.0,<3.10"

[package.dependencies]
Cython = ">=0.29.24,<0.30.0"
desdeo-emo = ">=1.0.0,<2.0.0"
desdeo-mcdm = ">=1.0.0,<2.0.0"
desdeo-problem = ">=1.0.0,<2.0.0"
desdeo-tools = ">=1.0.0,<2.0.0"

[[package]]
name = "desdeo-emo"
version = "1.4.1"
description = "The python version reference vector guided evolutionary algorithm."
category = "main"
optional = false
python-versions = ">=3.8.0,<3.10"

[package.dependencies]
desdeo-problem = ">=1.4,<2.0"
plotly = ">=5.10.0,<6.0.0"
pyDOE = ">=0.3.8,<0.4.0"

[[package]]
name = "desdeo-mcdm"
version = "1.2.13"
description = "Contains traditional optimization techniques from the field of Multiple-criteria decision-making. Methods belonging to the NIMBUS and NAUTILUS families can be found here. Part of the DESDEO framework."
category = "main"
optional = false
python-versions = ">=3.7.0,<3.10"

[package.dependencies]
desdeo-problem = ">=1.3.0"
desdeo-tools = ">=1.5.3"

[[package]]
name = "desdeo-problem"
version = "1.4.5"
description = "This package contains the problem classes for desdeo framework."
category = "main"
optional = false
python-versions = ">=3.8,<3.10"

[package.dependencies]
descartes = ">=1.1.0,<2.0.0"
desdeo-tools = ">=1.7.0,<2.0.0"
diversipy = ">=0.8.0,<0.9.0"
optproblems = ">=1.2,<2.0"
pytest = ">=7.0.0,<8.0.0"
scikit-learn = ">=1.1,<2.0"
Shapely = ">=1.8.0,<2.0.0"

[[package]]
name = "desdeo-tools"
version = "1.7.3"
description = "Generic tools and design language used in the DESDEO framework"
category = "main"
optional = false
python-versions = ">=3.7,<3.10"

[package.dependencies]
hvwfg = ">=1.0.2,<2.0.0"
numba = ">=0.56,<0.57"
numpy = ">=1.17,<2.0"
pandas = ">=1.0,<2.0"
scipy = ">=1.2,<2.0"
sphinx-autoapi = ">=1.8.4,<2.0.0"

[[package]]
name = "diversipy"
version = "0.8"
description = "Sample in hypercubes, select diverse subsets, and measure diversity"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
scipy = "*"

[[package]]
name = "docutils"
version = "0.19"
description = "Docutils -- Python Documentation Utilities"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "entrypoints"
version = "0.4"
description = "Discover and load entry points from installed packages."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "executing"
version = "0.10.0"
description = "Get the currently executing AST node of a frame, and other information"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "fastjsonschema"
version = "2.16.1"
description = "Fastest Python implementation of JSON schema"
category = "main"
optional = false
python-versions = "*"

[package.extras]
devel = ["colorama", "jsonschema", "json-spec", "pylint", "pytest", "pytest-benchmark", "pytest-cache", "validictory"]

[[package]]
name = "fonttools"
version = "4.34.4"
description = "Tools to manipulate font files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
woff = ["brotli (>=1.0.1)", "brotlicffi (>=0.8.0)", "zopfli (>=0.1.4)"]
unicode = ["unicodedata2 (>=14.0.0)"]
ufo = ["fs (>=2.2.0,<3)"]
type1 = ["xattr"]
symfont = ["sympy"]
repacker = ["uharfbuzz (>=0.23.0)"]
plot = ["matplotlib"]
pathops = ["skia-pathops (>=0.5.0)"]
lxml = ["lxml (>=4.0,<5)"]
interpolatable = ["munkres", "scipy"]
graphite = ["lz4 (>=1.7.4.2)"]
all = ["xattr", "unicodedata2 (>=14.0.0)", "munkres", "brotli (>=1.0.1)", "scipy", "brotlicffi (>=0.8.0)", "uharfbuzz (>=0.23.0)", "skia-pathops (>=0.5.0)", "sympy", "matplotlib", "lz4 (>=1.7.4.2)", "zopfli (>=0.1.4)", "lxml (>=4.0,<5)", "fs (>=2.2.0,<3)"]

[[package]]
name = "hvwfg"
version = "1.0.2"
description = "Python wrapper of the WFG hypervolume calculation functions"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"

[[package]]
name = "idna"
version = "3.3"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "imagesize"
version = "1.4.1"
description = "Getting image size from png/jpeg/jpeg2000/gif file"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "importlib-metadata"
version = "4.12.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = ">=0.5"

[package.extras]
testing = ["importlib-resources (>=1.3)", "pytest-mypy (>=0.9.1)", "pytest-black (>=0.3.7)", "pytest-perf (>=0.9.2)", "flufl.flake8", "pyfakefs", "packaging", "pytest-enabler (>=1.3)", "pytest-cov", "pytest-flake8", "pytest-checkdocs (>=2.4)", "pytest (>=6)"]
perf = ["ipython"]
docs = ["rst.linker (>=1.9)", "jaraco.packaging (>=9)", "sphinx"]

[[package]]
name = "importlib-resources"
version = "5.9.0"
description = "Read resources from Python packages"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
zipp = {version = ">=3.1.0", markers = "python_version < \"3.10\""}

[package.extras]
testing = ["pytest-mypy (>=0.9.1)", "pytest-black (>=0.3.7)", "pytest-enabler (>=1.3)", "pytest-cov", "pytest-flake8", "pytest-checkdocs (>=2.4)", "pytest (>=6)"]
docs = ["jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "jaraco.packaging (>=9)", "sphinx"]

[[package]]
name = "iniconfig"
version = "1.1.1"
description = "iniconfig: brain-dead simple config-ini parsing"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "ipykernel"
version = "6.15.1"
description = "IPython Kernel for Jupyter"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
appnope = {version = "*", markers = "platform_system == \"Darwin\""}
debugpy = ">=1.0"
ipython = ">=7.23.1"
jupyter-client = ">=6.1.12"
matplotlib-inline = ">=0.1"
nest-asyncio = "*"
packaging = "*"
psutil = "*"
pyzmq = ">=17"
tornado = ">=6.1"
traitlets = ">=5.1.0"

[package.extras]
test = ["pytest (>=6.0)", "pytest-timeout", "pytest-cov", "pre-commit", "ipyparallel", "flaky"]

[[package]]
name = "ipython"
version = "8.4.0"
description = "IPython: Productive Interactive Computing"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
appnope = {version = "*", markers = "sys_platform == \"darwin\""}
backcall = "*"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
decorator = "*"
jedi = ">=0.16"
matplotlib-inline = "*"
pexpect = {version = ">4.3", markers = "sys_platform != \"win32\""}
pickleshare = "*"
prompt-toolkit = ">=2.0.0,<3.0.0 || >3.0.0,<3.0.1 || >3.0.1,<3.1.0"
pygments = ">=2.4.0"
stack-data = "*"
traitlets = ">=5"

[package.extras]
test_extra = ["trio", "pandas", "numpy (>=1.19)", "nbformat", "matplotlib (!=3.2.0)", "curio", "testpath", "pytest-asyncio", "pytest (<7.1)"]
test = ["testpath", "pytest-asyncio", "pytest (<7.1)"]
qtconsole = ["qtconsole"]
parallel = ["ipyparallel"]
notebook = ["notebook", "ipywidgets"]
nbformat = ["nbformat"]
nbconvert = ["nbconvert"]
kernel = ["ipykernel"]
doc = ["Sphinx (>=1.3)"]
black = ["black"]
all = ["trio", "pandas", "numpy (>=1.19)", "matplotlib (!=3.2.0)", "curio", "testpath", "pytest-asyncio", "pytest (<7.1)", "qtconsole", "ipyparallel", "notebook", "ipywidgets", "nbformat", "nbconvert", "ipykernel", "Sphinx (>=1.3)", "black"]

[[package]]
name = "ipython-genutils"
version = "0.2.0"
description = "Vestigial utilities from IPython"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "jedi"
version = "0.18.1"
description = "An autocompletion tool for Python that can be used for text editors."
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
parso = ">=0.8.0,<0.9.0"

[package.extras]
testing = ["pytest (<7.0.0)", "docopt", "colorama", "Django (<3.1)"]
qa = ["mypy (==0.782)", "flake8 (==3.8.3)"]

[[package]]
name = "jinja2"
version = "3.1.2"
description = "A very fast and expressive template engine."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
MarkupSafe = ">=2.0"

[package.extras]
i18n = ["Babel (>=2.7)"]

[[package]]
name = "joblib"
version = "1.1.0"
description = "Lightweight pipelining with Python functions"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "json5"
version = "0.9.9"
description = "A Python implementation of the JSON5 data format."
category = "main"
optional = false
python-versions = "*"

[package.extras]
dev = ["hypothesis"]

[[package]]
name = "jsonschema"
version = "4.9.1"
description = "An implementation of JSON Schema validation for Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
attrs = ">=17.4.0"
importlib-resources = {version = ">=1.4.0", markers = "python_version < \"3.9\""}
pkgutil-resolve-name = {version = ">=1.3.10", markers = "python_version < \"3.9\""}
pyrsistent = ">=0.14.0,<0.17.0 || >0.17.0,<0.17.1 || >0.17.1,<0.17.2 || >0.17.2"

[package.extras]
format-nongpl = ["webcolors (>=1.11)", "uri-template", "rfc3986-validator (>0.1.0)", "rfc3339-validator", "jsonpointer (>1.13)", "isoduration", "idna", "fqdn"]
format = ["webcolors (>=1.11)", "uri-template", "rfc3987", "rfc3339-validator", "jsonpointer (>1.13)", "isoduration", "idna", "fqdn"]

[[package]]
name = "jupyter-client"
version = "7.3.4"
description = "Jupyter protocol implementation and client libraries"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
entrypoints = "*"
jupyter-core = ">=4.9.2"
nest-asyncio = ">=1.5.4"
python-dateutil = ">=2.8.2"
pyzmq = ">=23.0"
tornado = ">=6.0"
traitlets = "*"

[package.extras]
test = ["pytest-timeout", "pytest-cov", "pytest-asyncio (>=0.18)", "pytest", "pre-commit", "mypy", "ipython", "ipykernel (>=6.5)", "coverage", "codecov"]
doc = ["sphinxcontrib-github-alt", "sphinx (>=1.3.6)", "sphinx-rtd-theme", "myst-parser", "ipykernel"]

[[package]]
name = "jupyter-core"
version = "4.11.1"
description = "Jupyter core package. A base package on which Jupyter projects rely."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
pywin32 = {version = ">=1.0", markers = "sys_platform == \"win32\" and platform_python_implementation != \"PyPy\""}
traitlets = "*"

[package.extras]
test = ["pytest-timeout", "pytest-cov", "pytest", "pre-commit", "ipykernel"]

[[package]]
name = "jupyter-server"
version = "1.18.1"
description = "The backend—i.e. core services, APIs, and REST endpoints—to Jupyter web applications."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
anyio = ">=3.1.0,<4"
argon2-cffi = "*"
jinja2 = "*"
jupyter-client = ">=6.1.12"
jupyter-core = ">=4.7.0"
nbconvert = ">=6.4.4"
nbformat = ">=5.2.0"
packaging = "*"
prometheus-client = "*"
pywinpty = {version = "*", markers = "os_name == \"nt\""}
pyzmq = ">=17"
Send2Trash = "*"
terminado = ">=0.8.3"
tornado = ">=6.1.0"
traitlets = ">=5.1"
websocket-client = "*"

[package.extras]
test = ["requests", "pytest (>=6.0)", "pytest-tornasync", "pytest-timeout", "pytest-mock", "pytest-cov", "pytest-console-scripts", "pre-commit", "ipykernel", "coverage"]

[[package]]
name = "jupyterlab"
version = "3.4.5"
description = "JupyterLab computational environment"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ipython = "*"
jinja2 = ">=2.1"
jupyter-core = "*"
jupyter-server = ">=1.16,<2.0"
jupyterlab-server = ">=2.10,<3.0"
nbclassic = "*"
notebook = "<7"
packaging = "*"
tornado = ">=6.1.0"

[package.extras]
ui-tests = ["build"]
test = ["virtualenv", "requests-cache", "requests", "pytest-check-links (>=0.5)", "pytest-console-scripts", "pytest-cov", "pytest (>=6.0)", "pre-commit", "jupyterlab-server", "coverage", "check-manifest"]

[[package]]
name = "jupyterlab-pygments"
version = "0.2.2"
description = "Pygments theme using JupyterLab CSS variables"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "jupyterlab-server"
version = "2.15.0"
description = "A set of server components for JupyterLab and JupyterLab like applications."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
babel = "*"
importlib-metadata = {version = ">=3.6", markers = "python_version < \"3.10\""}
jinja2 = ">=3.0.3"
json5 = "*"
jsonschema = ">=3.0.1"
jupyter-server = ">=1.8,<2"
packaging = "*"
requests = "*"

[package.extras]
test = ["strict-rfc3339", "ruamel-yaml", "pytest (>=5.3.2)", "pytest-cov", "pytest-console-scripts", "openapi-spec-validator (<0.5)", "openapi-core (>=0.14.2)", "jupyter-server", "ipykernel", "codecov"]
openapi = ["ruamel-yaml", "openapi-core (>=0.14.2)"]

[[package]]
name = "kiwisolver"
version = "1.4.4"
description = "A fast implementation of the Cassowary constraint solver"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "lazy-object-proxy"
version = "1.7.1"
description = "A fast and thorough lazy object proxy."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "llvmlite"
version = "0.39.0"
description = "lightweight wrapper around basic LLVM functionality"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "lxml"
version = "4.9.1"
description = "Powerful and Pythonic XML processing library combining libxml2/libxslt with the ElementTree API."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, != 3.4.*"

[package.extras]
source = ["Cython (>=0.29.7)"]
htmlsoup = ["beautifulsoup4"]
html5 = ["html5lib"]
cssselect = ["cssselect (>=0.7)"]

[[package]]
name = "markupsafe"
version = "2.1.1"
description = "Safely add untrusted strings to HTML/XML markup."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "matplotlib"
version = "3.5.3"
description = "Python plotting package"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
cycler = ">=0.10"
fonttools = ">=4.22.0"
kiwisolver = ">=1.0.1"
numpy = ">=1.17"
packaging = ">=20.0"
pillow = ">=6.2.0"
pyparsing = ">=2.2.1"
python-dateutil = ">=2.7"
setuptools_scm = ">=4,<7"

[[package]]
name = "matplotlib-inline"
version = "0.1.3"
description = "Inline Matplotlib backend for Jupyter"
category = "main"
optional = false
python-versions = ">=3.5"

[package.dependencies]
traitlets = "*"

[[package]]
name = "mistune"
version = "0.8.4"
description = "The fastest markdown parser in pure Python"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "nbclassic"
version = "0.4.3"
description = "A web-based notebook environment for interactive computing"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
argon2-cffi = "*"
ipykernel = "*"
ipython-genutils = "*"
jinja2 = "*"
jupyter-client = ">=6.1.1"
jupyter-core = ">=4.6.1"
jupyter-server = ">=1.8"
nbconvert = ">=5"
nbformat = "*"
nest-asyncio = ">=1.5"
notebook-shim = ">=0.1.0"
prometheus-client = "*"
pyzmq = ">=17"
Send2Trash = ">=1.8.0"
terminado = ">=0.8.3"
tornado = ">=6.1"
traitlets = ">=4.2.1"

[package.extras]
test = ["requests-unixsocket", "pytest-tornasync", "pytest-cov", "selenium (==4.1.5)", "nbval", "testpath", "requests", "coverage", "pytest"]
json-logging = ["json-logging"]
docs = ["myst-parser", "sphinx-rtd-theme", "sphinxcontrib-github-alt", "nbsphinx", "sphinx"]

[[package]]
name = "nbclient"
version = "0.6.6"
description = "A client library for executing notebooks. Formerly nbconvert's ExecutePreprocessor."
category = "main"
optional = false
python-versions = ">=3.7.0"

[package.dependencies]
jupyter-client = ">=6.1.5"
nbformat = ">=5.0"
nest-asyncio = "*"
traitlets = ">=5.2.2"

[package.extras]
test = ["xmltodict", "twine (>=1.11.0)", "testpath", "setuptools (>=60.0)", "pytest-cov (>=2.6.1)", "pytest-asyncio", "pytest (>=4.1)", "pre-commit", "pip (>=18.1)", "mypy", "ipywidgets (<8.0.0)", "ipython (<8.0.0)", "ipykernel", "flake8", "check-manifest", "black"]
sphinx = ["sphinx-book-theme", "Sphinx (>=1.7)", "myst-parser", "moto", "mock", "autodoc-traits"]

[[package]]
name = "nbconvert"
version = "6.5.3"
description = "Converting Jupyter Notebooks"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
beautifulsoup4 = "*"
bleach = "*"
defusedxml = "*"
entrypoints = ">=0.2.2"
jinja2 = ">=3.0"
jupyter-core = ">=4.7"
jupyterlab-pygments = "*"
lxml = "*"
MarkupSafe = ">=2.0"
mistune = ">=0.8.1,<2"
nbclient = ">=0.5.0"
nbformat = ">=5.1"
packaging = "*"
pandocfilters = ">=1.4.1"
pygments = ">=2.4.1"
tinycss2 = "*"
traitlets = ">=5.0"

[package.extras]
webpdf = ["pyppeteer (>=1,<1.1)"]
test = ["pyppeteer (>=1,<1.1)", "pre-commit", "ipywidgets (>=7)", "ipykernel", "pytest-dependency", "pytest-cov", "pytest"]
serve = ["tornado (>=6.1)"]
docs = ["ipython", "nbsphinx (>=0.2.12)", "sphinx-rtd-theme", "sphinx (>=1.5.1)"]
all = ["ipython", "nbsphinx (>=0.2.12)", "sphinx-rtd-theme", "sphinx (>=1.5.1)", "tornado (>=6.1)", "pyppeteer (>=1,<1.1)", "pre-commit", "ipywidgets (>=7)", "ipykernel", "pytest-dependency", "pytest-cov", "pytest"]

[[package]]
name = "nbformat"
version = "5.4.0"
description = "The Jupyter Notebook format"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
fastjsonschema = "*"
jsonschema = ">=2.6"
jupyter-core = "*"
traitlets = ">=5.1"

[package.extras]
test = ["pre-commit", "pytest", "testpath", "check-manifest"]

[[package]]
name = "nest-asyncio"
version = "1.5.5"
description = "Patch asyncio to allow nested event loops"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "notebook"
version = "6.4.12"
description = "A web-based notebook environment for interactive computing"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
argon2-cffi = "*"
ipykernel = "*"
ipython-genutils = "*"
jinja2 = "*"
jupyter-client = ">=5.3.4"
jupyter-core = ">=4.6.1"
nbconvert = ">=5"
nbformat = "*"
nest-asyncio = ">=1.5"
prometheus-client = "*"
pyzmq = ">=17"
Send2Trash = ">=1.8.0"
terminado = ">=0.8.3"
tornado = ">=6.1"
traitlets = ">=4.2.1"

[package.extras]
test = ["requests-unixsocket", "pytest-cov", "selenium", "nbval", "testpath", "requests", "coverage", "pytest"]
json-logging = ["json-logging"]
docs = ["myst-parser", "sphinx-rtd-theme", "sphinxcontrib-github-alt", "nbsphinx", "sphinx"]

[[package]]
name = "notebook-shim"
version = "0.1.0"
description = "A shim layer for notebook traits and config"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
jupyter-server = ">=1.8,<2.0"

[package.extras]
test = ["pytest-console-scripts", "pytest-tornasync", "pytest"]

[[package]]
name = "numba"
version = "0.56.0"
description = "compiling Python code using LLVM"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
importlib-metadata = {version = "*", markers = "python_version < \"3.9\""}
llvmlite = ">=0.39.0dev0,<0.40"
numpy = ">=1.18,<1.23"

[[package]]
name = "numpy"
version = "1.22.4"
description = "NumPy is the fundamental package for array computing with Python."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "optproblems"
version = "1.3"
description = "Infrastructure to define optimization problems and some test problems for black-box optimization"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "packaging"
version = "21.3"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
pyparsing = ">=2.0.2,<3.0.5 || >3.0.5"

[[package]]
name = "pandas"
version = "1.4.3"
description = "Powerful data structures for data analysis, time series, and statistics"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
numpy = [
    {version = ">=1.20.0", markers = "platform_machine == \"arm64\" and python_version < \"3.10\""},
    {version = ">=1.19.2", markers = "platform_machine == \"aarch64\" and python_version < \"3.10\""},
    {version = ">=1.18.5", markers = "platform_machine != \"aarch64\" and platform_machine != \"arm64\" and python_version < \"3.10\""},
]
python-dateutil = ">=2.8.1"
pytz = ">=2020.1"

[package.extras]
test = ["pytest-xdist (>=1.31)", "pytest (>=6.0)", "hypothesis (>=5.5.3)"]

[[package]]
name = "pandocfilters"
version = "1.5.0"
description = "Utilities for writing pandoc filters in python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "parso"
version = "0.8.3"
description = "A Python Parser"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["pytest (<6.0.0)", "docopt"]
qa = ["mypy (==0.782)", "flake8 (==3.8.3)"]

[[package]]
name = "pexpect"
version = "4.8.0"
description = "Pexpect allows easy control of interactive console applications."
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
ptyprocess = ">=0.5"

[[package]]
name = "pickleshare"
version = "0.7.5"
description = "Tiny 'shelve'-like database with concurrency support"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pillow"
version = "9.2.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
tests = ["pytest-timeout", "pytest-cov", "pytest", "pyroma", "packaging", "olefile", "markdown2", "defusedxml", "coverage", "check-manifest"]
docs = ["sphinxext-opengraph", "sphinx-removed-in", "sphinx-issues (>=3.0.1)", "sphinx-copybutton", "sphinx (>=2.4)", "olefile", "furo"]

[[package]]
name = "pkgutil-resolve-name"
version = "1.3.10"
description = "Resolve a name to an object."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "plotly"
version = "5.10.0"
description = "An open-source, interactive data visualization library for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
tenacity = ">=6.2.0"

[[package]]
name = "pluggy"
version = "1.0.0"
description = "plugin and hook calling mechanisms for python"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
testing = ["pytest-benchmark", "pytest"]
dev = ["tox", "pre-commit"]

[[package]]
name = "prometheus-client"
version = "0.14.1"
description = "Python client for the Prometheus monitoring system."
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
twisted = ["twisted"]

[[package]]
name = "prompt-toolkit"
version = "3.0.30"
description = "Library for building powerful interactive command lines in Python"
category = "main"
optional = false
python-versions = ">=3.6.2"

[package.dependencies]
wcwidth = "*"

[[package]]
name = "psutil"
version = "5.9.1"
description = "Cross-platform lib for process and system monitoring in Python."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[package.extras]
test = ["wmi", "pywin32", "enum34", "mock", "ipaddress"]

[[package]]
name = "ptyprocess"
version = "0.7.0"
description = "Run a subprocess in a pseudo terminal"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pure-eval"
version = "0.2.2"
description = "Safely evaluate AST nodes without side effects"
category = "main"
optional = false
python-versions = "*"

[package.extras]
tests = ["pytest"]

[[package]]
name = "py"
version = "1.11.0"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"

[[package]]
name = "pycparser"
version = "2.21"
description = "C parser in Python"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"

[[package]]
name = "pydoe"
version = "0.3.8"
description = "Design of experiments for Python"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
numpy = "*"
scipy = "*"

[[package]]
name = "pygments"
version = "2.12.0"
description = "Pygments is a syntax highlighting package written in Python."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyparsing"
version = "3.0.9"
description = "pyparsing module - Classes and methods to define and execute parsing grammars"
category = "main"
optional = false
python-versions = ">=3.6.8"

[package.extras]
diagrams = ["jinja2", "railroad-diagrams"]

[[package]]
name = "pyrsistent"
version = "0.18.1"
description = "Persistent/Functional/Immutable data structures"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pytest"
version = "7.1.2"
description = "pytest: simple powerful testing with Python"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
atomicwrites = {version = ">=1.0", markers = "sys_platform == \"win32\""}
attrs = ">=19.2.0"
colorama = {version = "*", markers = "sys_platform == \"win32\""}
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<2.0"
py = ">=1.8.2"
tomli = ">=1.0.0"

[package.extras]
testing = ["xmlschema", "requests", "pygments (>=2.7.2)", "nose", "mock", "hypothesis (>=3.56)", "argcomplete"]

[[package]]
name = "python-dateutil"
version = "2.8.2"
description = "Extensions to the standard Python datetime module"
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"

[package.dependencies]
six = ">=1.5"

[[package]]
name = "pytz"
version = "2022.2.1"
description = "World timezone definitions, modern and historical"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywin32"
version = "304"
description = "Python for Window Extensions"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "pywinpty"
version = "2.0.7"
description = "Pseudo terminal support for Windows from Python."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "pyyaml"
version = "6.0"
description = "YAML parser and emitter for Python"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "pyzmq"
version = "23.2.1"
description = "Python bindings for 0MQ"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
cffi = {version = "*", markers = "implementation_name == \"pypy\""}
py = {version = "*", markers = "implementation_name == \"pypy\""}

[[package]]
name = "requests"
version = "2.28.1"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.7, <4"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<3"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
use_chardet_on_py3 = ["chardet (>=3.0.2,<6)"]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]

[[package]]
name = "scikit-learn"
version = "1.1.2"
description = "A set of python modules for machine learning and data mining"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
joblib = ">=1.0.0"
numpy = ">=1.17.3"
scipy = ">=1.3.2"
threadpoolctl = ">=2.0.0"

[package.extras]
tests = ["numpydoc (>=1.2.0)", "pyamg (>=4.0.0)", "mypy (>=0.961)", "black (>=22.3.0)", "flake8 (>=3.8.2)", "pytest-cov (>=2.9.0)", "pytest (>=5.0.1)", "pandas (>=1.0.5)", "scikit-image (>=0.16.2)", "matplotlib (>=3.1.2)"]
examples = ["seaborn (>=0.9.0)", "pandas (>=1.0.5)", "scikit-image (>=0.16.2)", "matplotlib (>=3.1.2)"]
docs = ["sphinxext-opengraph (>=0.4.2)", "sphinx-prompt (>=1.3.0)", "Pillow (>=7.1.2)", "numpydoc (>=1.2.0)", "sphinx-gallery (>=0.7.0)", "sphinx (>=4.0.1)", "memory-profiler (>=0.57.0)", "seaborn (>=0.9.0)", "pandas (>=1.0.5)", "scikit-image (>=0.16.2)", "matplotlib (>=3.1.2)"]
benchmark = ["memory-profiler (>=0.57.0)", "pandas (>=1.0.5)", "matplotlib (>=3.1.2)"]

[[package]]
name = "scipy"
version = "1.9.0"
description = "SciPy: Scientific Library for Python"
category = "main"
optional = false
python-versions = ">=3.8,<3.12"

[package.dependencies]
numpy = ">=1.18.5,<1.25.0"

[[package]]
name = "send2trash"
version = "1.8.0"
description = "Send file to trash natively under Mac OS X, Windows and Linux."
category = "main"
optional = false
python-versions = "*"

[package.extras]
win32 = ["pywin32"]
objc = ["pyobjc-framework-cocoa"]
nativelib = ["pywin32", "pyobjc-framework-cocoa"]

[[package]]
name = "setuptools-scm"
version = "6.4.2"
description = "the blessed package to manage your versions by scm tags"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
packaging = ">=20.0"
tomli = ">=1.0.0"

[package.extras]
toml = ["setuptools (>=42)"]
test = ["virtualenv (>20)", "pytest (>=6.2)"]

[[package]]
name = "shapely"
version = "1.8.2"
description = "Geometric objects, predicates, and operations"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
vectorized = ["numpy"]
test = ["pytest-cov", "pytest"]
all = ["numpy", "pytest-cov", "pytest"]

[[package]]
name = "six"
version = "1.16.0"
description = "Python 2 and 3 compatibility utilities"
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"

[[package]]
name = "sniffio"
version = "1.2.0"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "snowballstemmer"
version = "2.2.0"
description = "This package provides 29 stemmers for 28 languages generated from Snowball algorithms."
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "soupsieve"
version = "2.3.2.post1"
description = "A modern CSS selector implementation for Beautiful Soup."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "sphinx"
version = "5.1.1"
description = "Python documentation generator"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
alabaster = ">=0.7,<0.8"
babel = ">=1.3"
colorama = {version = ">=0.3.5", markers = "sys_platform == \"win32\""}
docutils = ">=0.14,<0.20"
imagesize = "*"
importlib-metadata = {version = ">=4.4", markers = "python_version < \"3.10\""}
Jinja2 = ">=2.3"
packaging = "*"
Pygments = ">=2.0"
requests = ">=2.5.0"
snowballstemmer = ">=1.1"
sphinxcontrib-applehelp = "*"
sphinxcontrib-devhelp = "*"
sphinxcontrib-htmlhelp = ">=2.0.0"
sphinxcontrib-jsmath = "*"
sphinxcontrib-qthelp = "*"
sphinxcontrib-serializinghtml = ">=1.1.5"

[package.extras]
test = ["typed-ast", "cython", "html5lib", "pytest (>=4.6)"]
lint = ["types-requests", "types-typed-ast", "docutils-stubs", "sphinx-lint", "mypy (>=0.971)", "isort", "flake8-bugbear", "flake8-comprehensions", "flake8 (>=3.5.0)"]
docs = ["sphinxcontrib-websupport"]

[[package]]
name = "sphinx-autoapi"
version = "1.9.0"
description = "Sphinx API documentation generator"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
astroid = ">=2.7"
Jinja2 = "*"
PyYAML = "*"
sphinx = ">=3.0"
unidecode = "*"

[package.extras]
go = ["sphinxcontrib-golangdomain"]
dotnet = ["sphinxcontrib-dotnetdomain"]
docs = ["sphinx-rtd-theme", "sphinx"]

[[package]]
name = "sphinxcontrib-applehelp"
version = "1.0.2"
description = "sphinxcontrib-applehelp is a sphinx extension which outputs Apple help books"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["pytest"]
lint = ["docutils-stubs", "mypy", "flake8"]

[[package]]
name = "sphinxcontrib-devhelp"
version = "1.0.2"
description = "sphinxcontrib-devhelp is a sphinx extension which outputs Devhelp document."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["pytest"]
lint = ["docutils-stubs", "mypy", "flake8"]

[[package]]
name = "sphinxcontrib-htmlhelp"
version = "2.0.0"
description = "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
test = ["html5lib", "pytest"]
lint = ["docutils-stubs", "mypy", "flake8"]

[[package]]
name = "sphinxcontrib-jsmath"
version = "1.0.1"
description = "A sphinx extension which renders display math in HTML via JavaScript"
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["mypy", "flake8", "pytest"]

[[package]]
name = "sphinxcontrib-qthelp"
version = "1.0.3"
description = "sphinxcontrib-qthelp is a sphinx extension which outputs QtHelp document."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["pytest"]
lint = ["docutils-stubs", "mypy", "flake8"]

[[package]]
name = "sphinxcontrib-serializinghtml"
version = "1.1.5"
description = "sphinxcontrib-serializinghtml is a sphinx extension which outputs \"serialized\" HTML files (json and pickle)."
category = "main"
optional = false
python-versions = ">=3.5"

[package.extras]
test = ["pytest"]
lint = ["docutils-stubs", "mypy", "flake8"]

[[package]]
name = "stack-data"
version = "0.4.0"
description = "Extract data from python stack frames and tracebacks for informative displays"
category = "main"
optional = false
python-versions = "*"

[package.dependencies]
asttokens = "*"
executing = "*"
pure-eval = "*"

[package.extras]
tests = ["cython", "littleutils", "pygments", "typeguard", "pytest"]

[[package]]
name = "tenacity"
version = "8.0.1"
description = "Retry code until it succeeds"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
doc = ["tornado (>=4.5)", "sphinx", "reno"]

[[package]]
name = "terminado"
version = "0.15.0"
description = "Tornado websocket backend for the Xterm.js Javascript terminal emulator library."
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
ptyprocess = {version = "*", markers = "os_name != \"nt\""}
pywinpty = {version = ">=1.1.0", markers = "os_name == \"nt\""}
tornado = ">=6.1.0"

[package.extras]
test = ["pytest (>=6.0)", "pytest-timeout", "pre-commit"]

[[package]]
name = "threadpoolctl"
version = "3.1.0"
description = "threadpoolctl"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "tinycss2"
version = "1.1.1"
description = "A tiny CSS parser"
category = "main"
optional = false
python-versions = ">=3.6"

[package.dependencies]
webencodings = ">=0.4"

[package.extras]
test = ["coverage", "pytest-isort", "pytest-flake8", "pytest-cov", "pytest"]
doc = ["sphinx-rtd-theme", "sphinx"]

[[package]]
name = "tomli"
version = "2.0.1"
description = "A lil' TOML parser"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "tornado"
version = "6.2"
description = "Tornado is a Python web framework and asynchronous networking library, originally developed at FriendFeed."
category = "main"
optional = false
python-versions = ">= 3.7"

[[package]]
name = "traitlets"
version = "5.3.0"
description = ""
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest", "pre-commit"]

[[package]]
name = "typing-extensions"
version = "4.3.0"
description = "Backported and Experimental Type Hints for Python 3.7+"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "unidecode"
version = "1.3.4"
description = "ASCII transliterations of Unicode text"
category = "main"
optional = false
python-versions = ">=3.5"

[[package]]
name = "urllib3"
version = "1.26.11"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, <4"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7,<2.0)"]
secure = ["ipaddress", "certifi", "idna (>=2.0.0)", "cryptography (>=1.3.4)", "pyOpenSSL (>=0.14)"]
brotli = ["brotlipy (>=0.6.0)", "brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]

[[package]]
name = "wcwidth"
version = "0.2.5"
description = "Measures the displayed width of unicode strings in a terminal"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "webencodings"
version = "0.5.1"
description = "Character encoding aliases for legacy web content"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "websocket-client"
version = "1.3.3"
description = "WebSocket client for Python with low level API options"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["websockets"]
optional = ["wsaccel", "python-socks"]
docs = ["sphinx-rtd-theme (>=0.5)", "Sphinx (>=3.4)"]

[[package]]
name = "wrapt"
version = "1.14.1"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"

[[package]]
name = "zipp"
version = "3.8.1"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
testing = ["pytest-mypy (>=0.9.1)", "pytest-black (>=0.3.7)", "func-timeout", "jaraco.itertools", "pytest-enabler (>=1.3)", "pytest-cov", "pytest-flake8", "pytest-checkdocs (>=2.4)", "pytest (>=6)"]
docs = ["jaraco.tidelift (>=1.4)", "rst.linker (>=1.9)", "jaraco.packaging (>=9)", "sphinx"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.8,<3.10"
content-hash = "297f29a273ce3d58e1d63e67c937ce151936a0eaa03bf6e5cc9fd4ec8e47f754"

[metadata.files]
alabaster = []
anyio = []
appnope = []
argon2-cffi = []
argon2-cffi-bindings = []
astroid = []
asttokens = []
atomicwrites = []
attrs = []
babel = []
backcall = []
beautifulsoup4 = []
bleach = []
certifi = []
cffi = []
charset-normalizer = []
colorama = []
cycler = []
cython = []
debugpy = []
decorator = []
defusedxml = []
descartes = []
desdeo = []
desdeo-emo = []
desdeo-mcdm = []
desdeo-problem = []
desdeo-tools = []
diversipy = []
docutils = []
entrypoints = []
executing = []
fastjsonschema = []
fonttools = []
hvwfg = []
idna = []
imagesize = []
importlib-metadata = []
importlib-resources = []
iniconfig = []
ipykernel = []
ipython = []
ipython-genutils = []
jedi = []
jinja2 = []
joblib = []
json5 = []
jsonschema = []
jupyter-client = []
jupyter-core = []
jupyter-server = []
jupyterlab = []
jupyterlab-pygments = []
jupyterlab-server = []
kiwisolver = []
lazy-object-proxy = []
llvmlite = []
lxml = []
markupsafe = []
matplotlib = []
matplotlib-inline = []
mistune = []
nbclassic = []
nbclient = []
nbconvert = []
nbformat = []
nest-asyncio = []
notebook = []
notebook-shim = []
numba = []
numpy = []
optproblems = []
packaging = []
pandas = []
pandocfilters = []
parso = []
pexpect = []
pickleshare = []
pillow = []
pkgutil-resolve-name = []
plotly = []
pluggy = []
prometheus-client = []
prompt-toolkit = []
psutil = []
ptyprocess = []
pure-eval = []
py = []
pycparser = []
pydoe = []
pygments = []
pyparsing = []
pyrsistent = []
pytest = []
python-dateutil = []
pytz = []
pywin32 = []
pywinpty = []
pyyaml = []
pyzmq = []
requests = []
scikit-learn = []
scipy = []
send2trash = []
setuptools-scm = []
shapely = []
six = []
sniffio = []
snowballstemmer = []
soupsieve = []
sphinx = []
sphinx-autoapi = []
sphinxcontrib-applehelp = []
sphinxcontrib-devhelp = []
sphinxcontrib-htmlhelp = []
sphinxcontrib-jsmath = []
sphinxcontrib-qthelp = []
sphinxcontrib-serializinghtml = []
stack-data = []
tenacity = []
terminado = []
threadpoolctl = []
tinycss2 = []
tomli = []
tornado = []
traitlets = []
typing-extensions = []
unidecode = []
urllib3 = []
wcwidth = []
webencodings = []
websocket-client = []
wrapt = []
zipp = []
